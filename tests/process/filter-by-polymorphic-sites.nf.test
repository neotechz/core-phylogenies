nextflow_process {

    name "Test Process FILTER_BY_POLYMORPHIC_SITES"
    script "modules/filter-by-polymorphic-sites.nf"
    process "FILTER_BY_POLYMORPHIC_SITES"
    profile "local"

    test("Returns gene alignment file if above or equal to cutoff") {

        when {
            params {
                filter_by_polymorphic_sites_cutoff = 0.05
            }
            process {
                """
                input[0] = Channel.of(["prorocentrum-spp",
                    "${projectDir}/tests/data/prorocentrum-spp-formatted/18S.fasta",
                    "${params.filter_by_polymorphic_sites_cutoff}",
                    "\${params.container_base}",
                    null])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out[0][0][0] == "prorocentrum-spp" },
                { assert path("${process.out[0][0][1]}").exists() }
            )
        }
        
    }

        test("Returns an empty string if below cutoff") {

        when {
            params {
                filter_by_polymorphic_sites_cutoff = 0.05
            }
            process {
                """
                input[0] = Channel.of(["prorocentrum-spp",
                    "${projectDir}/tests/data/prorocentrum-spp-formatted/18S.fasta",
                    "${params.filter_by_polymorphic_sites_cutoff}",
                    "\${params.container_base}",
                    null])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out[0][0][0] == "prorocentrum-spp" },
                { assert process.out[0][0][1] == "" }
            )
        }
        
    }

}