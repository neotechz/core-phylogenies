nextflow_process {

    name "Test Process CONCATENATE_ALIGNMENTS"
    script "modules/concatenate-alignments.nf"
    process "CONCATENATE_ALIGNMENTS"
    profile "local"

    test("Takes in string and returns concatenated alignment and list of genes") {

        when {
            params {

            }
            process {
                """
                input[0] = Channel.of(["prorocentrum-spp",
                    "${projectDir}/tests/data/prorocentrum-spp-formatted/18S.fasta ${projectDir}/tests/data/prorocentrum-spp-formatted/28S.fasta",
                    "\${params.container_base}",
                    null])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out[0][0][0] == "prorocentrum-spp" },
                { assert path("${process.out[0][0][1]}").exists() }, // concatenated-alignment
                { assert path("${process.out[0][0][2]}").exists()} // genes-after-filtering.txt
            )
        }
        
    }

}