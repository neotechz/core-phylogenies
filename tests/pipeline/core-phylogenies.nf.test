nextflow_pipeline {

    name "Test Workflow CORE_PHYLOGENIES"
    script "main.nf"

    test("Produces error when missing input data") {
        when {
            params {
                data = null

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = 0.05

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = 0.1
                filter_by_nucleotide_diversity_end = 0.8

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = 0.1
                filter_by_dnds_ratio_end = 1.0
            }
        }

        then {
            assertAll(
                { assert !workflow.success }
            )
        }

    }

    test("Produces error when missing cutoff for filtering by polymorphic sites") {
        when {
            params {
                data = "${projectDir}/tests/data/prorocentrum-spp-pipeline"

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = null

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = 0.1
                filter_by_nucleotide_diversity_end = 0.8

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = 0.1
                filter_by_dnds_ratio_end = 1.0
            }
        }

        then {
            assertAll(
                { assert !workflow.success }
            )
        }

    }

    test("Produces error when missing start of range for filtering by nucleotide diversity") {
        when {
            params {
                data = "${projectDir}/tests/data/prorocentrum-spp-pipeline"

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = 0.05

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = null
                filter_by_nucleotide_diversity_end = 0.8

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = 0.1
                filter_by_dnds_ratio_end = 1.0
            }
        }

        then {
            assertAll(
                { assert !workflow.success }
            )
        }

    }

    test("Produces error when missing end of range for filtering by nucleotide diversity") {
        when {
            params {
                data = "${projectDir}/tests/data/prorocentrum-spp-pipeline"

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = 0.05

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = 0.1
                filter_by_nucleotide_diversity_end = null

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = 0.1
                filter_by_dnds_ratio_end = 1.0
            }
        }

        then {
            assertAll(
                { assert !workflow.success }
            )
        }

    }

    test("Produces error when missing start of range for filtering by dN/dS ratio") {
        when {
            params {
                data = "${projectDir}/tests/data/prorocentrum-spp-pipeline"

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = 0.05

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = 0.1
                filter_by_nucleotide_diversity_end = 0.8

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = null
                filter_by_dnds_ratio_end = 1.0
            }
        }

        then {
            assertAll(
                { assert !workflow.success }
            )
        }

    }

    test("Produces error when missing end of range for filtering by dN/dS ratio") {
        when {
            params {
                data = "${projectDir}/tests/data/prorocentrum-spp-pipeline"

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = 0.05

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = 0.1
                filter_by_nucleotide_diversity_end = 0.8

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = 0.1
                filter_by_dnds_ratio_end = null
            }
        }

        then {
            assertAll(
                { assert !workflow.success }
            )
        }

    }

    test("Terminates properly when given complete input on 'local' profile") { 

        when {
            params {
                data = "${projectDir}/tests/data/prorocentrum-spp-pipeline"

                // FILTER_BY_POLYMORPHIC_SITES
                filter_by_polymorphic_sites_cutoff = 0.05

                // FILTER_BY_NUCLEOTIDE_DIVERSITY
                filter_by_nucleotide_diversity_start = 0.1
                filter_by_nucleotide_diversity_end = 0.8

                // FILTER_BY_DNDS_RATIO
                filter_by_dnds_ratio_start = 0.1
                filter_by_dnds_ratio_end = 1.0

                profile = "local"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.trace.succeeded().size() == 16 },
                { assert workflow.trace.failed().size() == 0 }, 
                { assert workflow.trace.tasks().size() == 16 }
            )
        }
        
    }
}