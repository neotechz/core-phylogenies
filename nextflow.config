params {
    data = "data/"
    results = "results/"

    // PREPARE_ID
    prepare_id_cpus = "1"
    prepare_id_memory = "2"
    prepare_id_method = "prepare-id-split-path"

    // FORMAT_HEADERS
    format_headers_cpus = "2"
    format_headers_memory = "4"

    // FILTER_BY_POLYMORPHIC_SITES
    filter_by_polymorphic_sites_cpus = "4"
    filter_by_polymorphic_sites_memory = "4"
    filter_by_polymorphic_sites_cutoff = null

    // FILTER_BY_NUCLEOTIDE_DIVERSITY
    filter_by_nucleotide_diversity_cpus = "4"
    filter_by_nucleotide_diversity_memory = "4"
    filter_by_nucleotide_diversity_start = null
    filter_by_nucleotide_diversity_end = null

    // FILTER_BY_DNDS_RATIO
    filter_by_dnds_ratio_cpus = "4"
    filter_by_dnds_ratio_memory = "4"
    filter_by_dnds_ratio_start = null
    filter_by_dnds_ratio_end = null

    // CONCATENATE_ALIGNMENTS
    concatenate_alignments_cpus = "4"
    concatenate_alignments_memory = "4"

    // CALCULATE_SUBSTITUTION_MODEL
    calculate_substitution_model_cpus = "4"
    calculate_substitution_model_memory = "4"

    // MAKE_PHYLOGENY
    make_phylogeny_cpus = "12"
    make_phylogeny_memory = "12"

     // MEASURE_RF_DISTANCE
    measure_rf_distance_cpus = "4"
    measure_rf_distance_memory = "4"

    // Process containers
    container_python = "neotechz/core-phylogenies/python:1.1"
    container_modeltest_ng = "quay.io/biocontainers/modeltest-ng:0.1.7--hf316886_3"
    container_raxml_ng = "quay.io/biocontainers/raxml-ng:0.9.0--h192cbe9_1"

    // SLURM options
    cluster_options = null
}

profiles {
    local {
        process {
            executor = 'local'
            errorStrategy = 'ignore'
        }
        
        docker {
            enabled = true
        }
    }

    slurm {
        process {
            executor = 'slurm'
            errorStrategy = 'ignore'
        }

        singularity {
            enabled = true
            autoMounts = true
        }

        env {
            TMPDIR = "$projectDir/tmp/"
        }
    }
}

timeline {
    enabled = true
    file = "logs/${new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')}_timeline.html"
    overwrite = true
}

report {
    enabled = true
    file = "logs/${new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')}_report.html"
    overwrite = true
}

trace {
    enabled = true
    file = "logs/${new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')}_trace.txt"
    fields = 'task_id,hash,native_id,name,status,exit,submit,duration,realtime,%cpu,peak_rss,peak_vmem,rchar,wchar,container'
    overwrite = true
}

dag {
    enabled = true
    file = "logs/${new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')}_dag.png"
    overwrite = true
}
